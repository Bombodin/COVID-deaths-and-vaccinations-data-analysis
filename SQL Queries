/*
Covid 19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/
-- Selects the starting data

SELECT
 location,
 date,
 total_cases,
 new_cases,
 total_deaths,
 population 
FROM `covidproject-450513.Coviddata.coviddeaths`
ORDER BY 1,2

-- Shows what percentage of infected people die

SELECT
 date,
 total_cases,
 (total_cases/total_deaths)*100 as deaths_percentage
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
ORDER BY 1,2;

-- Percentage of infected people in population

SELECT 
 date,
 total_cases,
 population,
 total_cases,
 (total_cases/population)*100 AS infected_percentage
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
ORDER BY 1,2;

-- Countries with highest infection rate compared to population

SELECT
 location,
 population,
 MAX(total_cases) AS peak_infection_count,
 MAX((total_cases/population))*100 AS infected_percentage
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
GROUP BY location, population
ORDER BY infected_percentage DESC;

-- Countries by the absolute highest death count 

SELECT
 location,
 MAX(total_deaths) AS peak_death_count,
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
GROUP BY location
ORDER BY peak_death_count DESC;

-- Countries by the highest deaths per population

SELECT
 location,
 MAX(total_deaths/population)*100 as deaths_percent,
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
GROUP BY location
ORDER BY deaths_percent DESC;

-- Total global infection and death data

Select
 SUM(new_cases) as total_cases,
 SUM(cast(new_deaths as int)) as total_deaths,
 SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From `covidproject-450513.Coviddata.coviddeaths`
where continent is not null
order by 1,2

-- Number of new vaccinations compared to the population

SELECT
 dea.continent,
 dea.location,
 dea.date,
 dea.population,
 vac.new_vaccinations
FROM `covidproject-450513.Coviddata.coviddeaths` AS dea
JOIN `covidproject-450513.Coviddata.covidvaccinations` AS vac
ON dea.location = vac.location
WHERE dea.continent IS NOT null
AND dea.date = vac.date
ORDER BY 1,2;

-- Total vaccinations per country by time, using a rolling counter function

SELECT
 dea.location,
 dea.date,
 dea.population,
 vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.date) AS vaccinations_to_date
FROM `covidproject-450513.Coviddata.coviddeaths` AS dea
JOIN `covidproject-450513.Coviddata.covidvaccinations` AS vac
ON dea.location = vac.location
WHERE dea.continent IS NOT null
AND dea.date = vac.date
ORDER BY 1,2;

-- Total and percent of vaccinated in a country over time using a subquery

WITH pop_vs_vac AS (
    SELECT *,
        (vaccinations_to_date / population) * 100 AS percent_vaccinated
    FROM (
        SELECT
          dea.location,
          dea.date,
          dea.population,
          vac.new_vaccinations,
          SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.date) AS vaccinations_to_date
        FROM `covidproject-450513.Coviddata.coviddeaths` AS dea
        JOIN `covidproject-450513.Coviddata.covidvaccinations` AS vac
        ON dea.location = vac.location
        WHERE dea.continent IS NOT NULL
        AND dea.date = vac.date
    ) subquery
)

SELECT *
FROM pop_vs_vac;

-- Total and percent of vaccinated in a country using a temp table

CREATE TEMP TABLE temp_pop_vs_vac AS
SELECT
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.date) AS vaccinations_to_date
FROM `covidproject-450513.Coviddata.coviddeaths` AS dea
JOIN `covidproject-450513.Coviddata.covidvaccinations` AS vac
ON dea.location = vac.location
WHERE dea.continent IS NOT NULL
AND dea.date = vac.date;

SELECT *,
 (vaccinations_to_date / population) * 100 AS percent_vaccinated
FROM temp_pop_vs_vac;

-- View of total and percent vaccinated for later visualization

CREATE VIEW `covidproject-450513.Coviddata.percent_vaccinated` AS 
SELECT
 dea.location,
 dea.date,
 dea.population,
 vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.date) AS vaccinations_to_date,
 (SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.date) / population) * 100 AS per_capita_vaccinated
FROM `covidproject-450513.Coviddata.coviddeaths` AS dea
JOIN `covidproject-450513.Coviddata.covidvaccinations` AS vac
ON dea.location = vac.location
WHERE dea.continent IS NOT NULL
AND dea.date = vac.date;

-- View of death data for later visualization

CREATE VIEW `covidproject-450513.Coviddata.deaths` AS 
Select
 SUM(new_cases) as total_cases,
 SUM(cast(new_deaths as int)) as total_deaths,
 SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From `covidproject-450513.Coviddata.coviddeaths`
where continent is not null
order by 1,2

-- View of infection data for later visualization

CREATE VIEW `covidproject-450513.Coviddata.infections` AS 
SELECT
 location,
 population,
 MAX(total_cases) AS peak_infection_count,
 MAX((total_cases/population))*100 AS infected_percentage
FROM `covidproject-450513.Coviddata.coviddeaths`
WHERE continent IS NOT null
GROUP BY location, population
ORDER BY infected_percentage DESC;












